#!/usr/bin/python

""" 
    Starter code for exploring the Enron dataset (emails + finances);
    loads up the dataset (pickled dict of dicts).

    The dataset has the form:
    enron_data["LASTNAME FIRSTNAME MIDDLEINITIAL"] = { features_dict }

    {features_dict} is a dictionary of features associated with that person.
    You should explore features_dict as part of the mini-project,
    but here's an example to get you started:

    enron_data["SKILLING JEFFREY K"]["bonus"] = 5600000
    
"""

import pickle

enron_data = pickle.load(open("../final_project/final_project_dataset.pkl", "r"))


#print "Size of the Enron Dataset:\t",len(enron_data)
#print "For each person, how many features are available?"
#print len(enron_data['SKILLING JEFFREY K'])
#print enron_data['SKILLING JEFFREY K']
#print type(enron_data)

#print "How many POIs are in the dataset?"
count=0
for name in enron_data:
    if enron_data[name]['poi']==False:
        count+=1
print "number of nonPOI:\t",count

#print enron_data.keys        
#print "What is the total value of the stock belonging to James Prentice?"
#print enron_data['PRENTICE JAMES']['total_stock_value']

#print "How many email messages do we have from Wesley Colwell to persons of interest?"
#print enron_data['COLWELL WESLEY']['from_this_person_to_poi']

#print "What's the value of stock options exercised by Jeffery Skilling?"
#print enron_data['SKILLING JEFFREY K']['exercised_stock_options']

#print "Skilling",enron_data['SKILLING JEFFREY K']['total_payments']
#print "Lay",enron_data['LAY KENNETH L']['total_payments']
#print "Fastow",enron_data['FASTOW ANDREW S']['total_payments']


count_salary=0
count_email=0
for name in enron_data:
    if enron_data[name]['salary']!='NaN':
        count_salary+=1
    if enron_data[name]['email_address']!='NaN':
        count_email+=1

#print "How many folks have a quantified salary?\t",count_salary

#print "How about known email address?\t",count_email


count_NaN_tp=0
for key in enron_data.keys():
    if enron_data[key]['total_payments']=='NaN':
        count_NaN_tp+=1
#print count_NaN_tp #people with NaN total payments
#print float(count_NaN_tp)/len(enron_data.keys())

count_NaN_poi=0
for key in enron_data.keys():
    if enron_data[key]['total_payments']=='NaN' and enron_data[key]['poi']==True:
        count_NaN_poi+=1
print "number of NaN in POI:\t",count_NaN_poi
print float(count_NaN_poi)/count

